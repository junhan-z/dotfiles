# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
# TODO: auto install oh-my-posh for Linux
# OMP_THEME_LOCAL="chips"
# OMP_THEME_LOCAL="jv_sitecorian"
# OMP_THEME_LOCAL="multiverse-neon"
OMP_THEME_LOCAL="tokyonight_storm"

case `uname` in
  Linux)
  eval "$(oh-my-posh --init --shell zsh --config  ~/.poshthemes/$OMP_THEME_LOCAL.omp.json)"
  ;;
  Darwin)
  eval "$(oh-my-posh --init --shell zsh --config  $(brew --prefix oh-my-posh)/themes/$OMP_THEME_LOCAL.omp.json)"
  ;;
esac

ZSH_DISABLE_COMPFIX=True
export ZSH="$HOME/.oh-my-zsh"
export LANG=en_US.UTF-8

# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  zsh-autosuggestions
  zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh

# User configuration
export EDITOR=vim
export VISUAL=vim

# used for .vimrc
HOSTNAME=$(hostname)

# Keybindings
bindkey -v
export KEYTIMEOUT=1

bindkey '^w' backward-kill-word
bindkey '^d' delete-char
bindkey '^k' kill-line
bindkey '^h' backward-delete-char

bindkey '^r' history-incremental-search-backward
bindkey '^s' history-incremental-search-forward
bindkey '^p' up-history
bindkey '^n' down-history

bindkey '^f' forward-char
bindkey '^b' backward-char
bindkey '^a' beginning-of-line
bindkey '^e' end-of-line

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# readline for compilers, maybe used when run Ruby bundle
export LDFLAGS="-L/opt/homebrew/opt/readline/lib"
export CPPFLAGS="-I/opt/homebrew/opt/readline/include"

# ENV extensions
# Python: virtualenv
case `uname` in
  Linux)
    VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
  ;;
  Darwin)
    VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3
  ;;
esac
export WORKON_HOME='~/.virtualenvs'
[ -f /usr/local/bin/virtualenvwrapper.sh ] && source /usr/local/bin/virtualenvwrapper.sh

# Ruby: rbenv
export PATH="$HOME/.rbenv/bin:$PATH"
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# Javascript: nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Golang
export PATH="$PATH:/usr/local/go/bin"

# Rosetta2
# Brew python path
alias ibrew="arch -x86_64 /usr/local/bin/brew" # Homebrew on Rosetta2
export PATH="/usr/local/opt/python/libexec/bin:$PATH"
# Homebrew on the M1, where things install to /opt/homebrew
export PATH="/opt/homebrew/bin:$PATH"
export PATH="/usr/local/opt/rabbitmq/sbin:$PATH"
export PATH="/usr/local/sbin:$PATH"
export PATH="$HOME/.rbenv/bin:$PATH"

# zsh 
alias zsh64="arch -x86_64 zsh"

# flutter
export PATH="$HOME/Documents/flutter/bin:$PATH"

# tmux
alias tmux="tmux -u" # use UTF-8 in tmux to support powerline

# Git
alias gl5="git log --oneline --decorate --graph -5"

# WSL .local path
export PATH="${HOME}/.local/bin:$PATH"
if [ -f "$HOME/.ssh/github_token" ]
then
  echo "Adding github SSH token."
  eval "$(ssh-agent -s)" && ssh-add ~/.ssh/github_token
fi

# WSL aliases
# alias open, as if it's the MacOS, hence only applies it for WSL
if uname -r | grep -q 'microsoft' && ! type "explorer.exe" > /dev/null; then
  alias open="explorer.exe"
fi

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"

PATH=~/.console-ninja/.bin:$PATH

function update_git_config {
  local name="Junhan"
  local email="z@junhan.xyz"
  git config user.name "${name}"
  git config user.email "${email}"
  echo "Updated:\nname: ${name}\nemail: ${email}"
}

# Kubernets auto-complete
if which kubectl > /dev/null; then source <(kubectl completion zsh); fi

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/opt/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/opt/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

